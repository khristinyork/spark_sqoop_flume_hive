#PREWORK
#CARGAR PARQUET EN UNA TABLA HIVE CON COMPRESION SNAPY
#CARGAR PARQUET EN UNA TABLA IMPALA CON COMPRESION SNAPY

#Please perform these steps before solving the problem

#Login to MySQL using below commands on a fresh terminal window
mysql -u retail_dba -p
Password = cloudera
#Create a replica product table and name it products_replica
create table products_replica as select * from products;
#Add primary key to the newly created table
alter table products_replica add primary key (product_id);
mysql> alter table products_replica add primary key (product_id);
Query OK, 1345 rows affected (0.14 sec)
Records: 1345  Duplicates: 0  Warnings: 0

mysql> desc products_replica
    -> ;
+---------------------+--------------+------+-----+---------+-------+
| Field               | Type         | Null | Key | Default | Extra |
+---------------------+--------------+------+-----+---------+-------+
| product_id          | int(11)      | NO   | PRI | 0       |       |
| product_category_id | int(11)      | NO   |     | NULL    |       |
| product_name        | varchar(45)  | NO   |     | NULL    |       |
| product_description | varchar(255) | NO   |     | NULL    |       |
| product_price       | float        | NO   |     | NULL    |       |
| product_image       | varchar(255) | NO   |     | NULL    |       |
+---------------------+--------------+------+-----+---------+-------+
6 rows in set (0.00 sec)

#Add two more columns
alter table products_replica add column (product_grade int, product_sentiment varchar(100));
#Run below two update statements to modify the data
update products_replica set product_grade = 1  where product_price > 500;
update products_replica set product_sentiment  = ‘WEAK’  where product_price between 300 and  500;


#Problem Statement
#   Using sqoop, import products_replica table from MYSQL into hdfs 
#   such that fields are separated by a ‘|’ and lines are separated by ‘\n’. 
#   Null values are represented as -1 for numbers and “NOT-AVAILABLE” for strings. 
#   CADENAS_NULAS --null-string “NOT-AVAILABLE”
#   CAMPO_NO_CADENA_NUMERICO  --null-non-string -1
#   Only records with product id greater than or equal to 1 and less than or 
#   equal to 1000 should be imported and use 3 mappers for importing.
#   Consulta de límite para usar para crear divisiones
#   --boundary-query "select min(product_id), max(product_id) from products_replica where product_id between 1 and 1000";
#   The destination file should be stored as a text file to directory  /user/cloudera/problem5/products-text.
sqoop import --connect jdbc:mysql://quickstart.cloudera:3306/retail_db  \
--username root --password cloudera --table products_replica  \
--compress --compression-codec org.apache.hadoop.io.compress.SnappyCodec   \
--target-dir /user/cloudera/problem5/products-text  \
--fields-terminated-by '|'  \
--lines-terminated-by '\n'  \
--null-string “NOT-AVAILABLE”  \
--null-non-string -1  \
-m 3  \
--where "product_id between 1 and 1000" \
--outdir /home/cloudera/sqoop1 \
--boundary-query "select min(product_id), max(product_id) from products_replica where product_id between 1 and 1000";

# Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a ‘*’ 
#and lines are separated by ‘\n’. Null values are represented as -1000 for numbers and “NA” for strings. 
# Only records with product id less than or equal to 1111 should be imported and use 2 mappers for importing.
# The destination file should be stored as a text file to directory  /user/cloudera/problem5/products-text-part1.

sqoop import --connect jdbc:mysql://quickstart.cloudera:3306/retail_db  \
--username root --password cloudera \
--table products_replica  \
--target-dir /user/cloudera/problem5/products-text-part1  \
--fields-terminated-by '*'  \
--lines-terminated-by '\n'  \
--null-string “NA”  \
--null-non-string -1000  \
-m 2  \
--where "product_id <= 1111";


# Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a ‘*’ 
# and lines are separated by ‘\n’. Null values are represented as -1000 for numbers and “NA” for strings. 
# Only records with product id greater than 1111 should be imported and use 5 mappers for importing. 
# The destination file should be stored as a text file to directory  /user/cloudera/problem5/products-text-part2.
sqoop import --connect jdbc:mysql://quickstart.cloudera:3306/retail_db  \
--username root --password cloudera \
--table products_replica  \
--target-dir /user/cloudera/problem5/products-text-part2  \
--fields-terminated-by '*'  \
--lines-terminated-by '\n'  \
--null-string “NA”  \
--null-non-string -1000  \
-m 2  \
--where "product_id <= 1111"
--outdir /home/cloudera/sqoop3 \
--boundary-query "select min(product_id), max(product_id) from products_replica where product_id > 1111";

#  Using sqoop merge data available in /user/cloudera/problem5/products-text-part1 
#  and /user/cloudera/problem5/products-text-part2 to produce a new set of files 
# in /user/cloudera/problem5/products-text-both-parts.
#-new-data /user/cloudera/problem5/products-text-part2 >datos nuevos
#--onto /user/cloudera/problem5/products-text-part1 >datos viejos
#--target-dir /user/cloudera/problem5/products-text-both-parts > ruta de union de amos ficheros
#--merge-key product_id > clave por la que mergear o unir
#generar el JAR DE LA TABLA 
$ sqoop codegen \
--connect jdbc:mysql://localhost/userdb \
--username root \ 
--table products_replica
sqoop codegen --connect jdbc:mysql://quickstart.cloudera:3306/retail_db --username root --password cloudera --table products_replica --hadoop-home /tmp/sqoop-clodera/compile 

sqoop merge --class-name products_replica --jar-file /tmp/sqoop-root/compile/f29916e18f25407bfab8436a7060897f/products_replica.jar --new-data /user/cloudera/problem5/products-text-part2 --onto /user/cloudera/problem5/products-text-part1 --target-dir /user/cloudera/problem5/products-text-both-parts --merge-key product_id;
#INCREMENTAL INSERT SQOOP
# Using sqoop do the following. Read the entire steps before you create the sqoop job.
# 1.- create a sqoop job Import Products_replica table as text file to directory /user/cloudera/problem5/products-incremental. Import all the records.
# 2.- insert three more records to Products_replica from mysql
# 3.- run the sqoop job again so that only newly added records can be pulled from mysql
# 4.- insert 2 more records to Products_replica from mysql
# 5.- run the sqoop job again so that only newly added records can be pulled from mysql
# 6.- Validate to make sure the records have not be duplicated in HDFS

